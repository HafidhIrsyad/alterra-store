{
    "swagger": "2.0",
    "info": {
      "description": "Alterra Store Project API Documentation",
      "version": "1.0.0",
      "title": "Alterra Store",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "-"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "petstore.swagger.io",
    "basePath": "/v2",
    "tags": [
      {
        "name": "users"
      },
      {
        "name": "products"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/users": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Get All Users",
          "description": "",
          "operationId": "getInventory",
          "produces": [
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        },
        "post": {
            "tags": [
              "users"
            ],
            "summary": "User Register",
            "description": "",
            "operationId": "placeOrder",
            "produces": [
              "application/xml",
              "application/json"
            ],
            "parameters": [
              {
                "in": "body",
                "name": "body",
                "description": "order placed for purchasing the pet",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/Order"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "successful operation",
                "schema": {
                  "$ref": "#/definitions/Order"
                }
              },
              "400": {
                "description": "Invalid Order"
              }
            }
          }
      },
      "/users/{userId}": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Get User by ID",
          "description": "",
          "operationId": "getOrderById",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "ID of pet that needs to be fetched",
              "required": true,
              "type": "integer",
              "maximum": 10,
              "minimum": 1,
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Order"
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Order not found"
            }
          }
        },
        "put": {
            "tags": [
              "users"
            ],
            "summary": "Updated User",
            "description": "",
            "operationId": "updateUser",
            "produces": [
              "application/xml",
              "application/json"
            ],
            "parameters": [
              {
                "name": "username",
                "in": "path",
                "description": "name that need to be updated",
                "required": true,
                "type": "string"
              },
              {
                "in": "body",
                "name": "body",
                "description": "Updated user object",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            ],
            "responses": {
              "400": {
                "description": "Invalid user supplied"
              },
              "404": {
                "description": "User not found"
              }
            }
          },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "Delete User by ID",
          "description": "",
          "operationId": "deleteOrder",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "ID of the order that needs to be deleted",
              "required": true,
              "type": "integer",
              "minimum": 1,
              "format": "int64"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Order not found"
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "petstore_auth": {
        "type": "oauth2",
        "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
        "flow": "implicit",
        "scopes": {
          "write:pets": "modify pets in your account",
          "read:pets": "read your pets"
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "definitions": {
      "Product_Categories": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Product_Categories"
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "Users"
        }
      }
    },
    "externalDocs": {
      "description": "Find out more about Swagger",
      "url": "http://swagger.io"
    }
  }